# Initializing proof state
# Scanning for AC axioms
#
#cnf(i_0_5, plain, (ssItem(esk1_0))).
#
#cnf(i_0_4, plain, (ssItem(esk2_0))).
#
#cnf(i_0_84, plain, (ssList(nil))).
#
#cnf(i_0_115, plain, (~singletonP(nil))).
#
#cnf(i_0_198, negated_conjecture, (ssList(esk48_0))).
#
#cnf(i_0_197, negated_conjecture, (ssList(esk49_0))).
#
#cnf(i_0_196, negated_conjecture, (ssList(esk50_0))).
#
#cnf(i_0_191, negated_conjecture, (~cyclefreeP(esk49_0))).
#
#cnf(i_0_195, negated_conjecture, (ssList(esk51_0))).
#
#cnf(i_0_141, plain, (cyclefreeP(nil))).
#
#cnf(i_0_143, plain, (totalorderP(nil))).
#
#cnf(i_0_3, plain, (esk2_0!=esk1_0)).
#
#cnf(i_0_145, plain, (strictorderP(nil))).
#
#cnf(i_0_147, plain, (totalorderedP(nil))).
#
#cnf(i_0_154, plain, (strictorderedP(nil))).
#
#cnf(i_0_192, negated_conjecture, (~neq(esk51_0,nil))).
#
#cnf(i_0_161, plain, (duplicatefreeP(nil))).
#
#cnf(i_0_163, plain, (equalelemsP(nil))).
#
#cnf(i_0_193, negated_conjecture, (esk50_0=esk48_0)).
#
#cnf(i_0_183, plain, (~lt(X1,X1)|~ssItem(X1))).
#
#cnf(i_0_194, negated_conjecture, (esk49_0=esk51_0)).
#
#cnf(i_0_118, plain, (frontsegP(X1,X1)|~ssList(X1))).
#
#cnf(i_0_128, plain, (rearsegP(X1,X1)|~ssList(X1))).
#
#cnf(i_0_191, negated_conjecture, (~cyclefreeP(esk51_0))).
#
#cnf(i_0_135, plain, (segmentP(X1,X1)|~ssList(X1))).
#
#cnf(i_0_101, plain, (leq(X1,X1)|~ssItem(X1))).
#
#cnf(i_0_182, plain, (geq(X1,X1)|~ssItem(X1))).
#
#cnf(i_0_114, plain, (~memberP(nil,X1)|~ssItem(X1))).
#
#cnf(i_0_123, plain, (frontsegP(X1,nil)|~ssList(X1))).
#
#cnf(i_0_130, plain, (rearsegP(X1,nil)|~ssList(X1))).
#
#cnf(i_0_137, plain, (segmentP(X1,nil)|~ssList(X1))).
#
#cnf(i_0_85, plain, (cons(X2,X1)!=X1|~ssList(X1)|~ssItem(X2))).
#
#cnf(i_0_177, plain, (app(X1,nil)=X1|~ssList(X1))).
#
#cnf(i_0_98, plain, (app(nil,X1)=X1|~ssList(X1))).
#
#cnf(i_0_140, plain, (cyclefreeP(cons(X1,nil))|~ssItem(X1))).
#
#cnf(i_0_91, plain, (cons(X2,X1)!=nil|~ssList(X1)|~ssItem(X2))).
#
#cnf(i_0_142, plain, (totalorderP(cons(X1,nil))|~ssItem(X1))).
#
#cnf(i_0_144, plain, (strictorderP(cons(X1,nil))|~ssItem(X1))).
#
#cnf(i_0_146, plain, (totalorderedP(cons(X1,nil))|~ssItem(X1))).
#
#cnf(i_0_2, plain, (X1!=X2|~neq(X1,X2)|~ssItem(X2)|~ssItem(X1))).
#
#cnf(i_0_153, plain, (strictorderedP(cons(X1,nil))|~ssItem(X1))).
#
#cnf(i_0_160, plain, (duplicatefreeP(cons(X1,nil))|~ssItem(X1))).
#
#cnf(i_0_162, plain, (equalelemsP(cons(X1,nil))|~ssItem(X1))).
#
#cnf(i_0_188, plain, (X1!=X2|~lt(X1,X2)|~ssItem(X2)|~ssItem(X1))).
#
#cnf(i_0_12, plain, (ssItem(esk5_1(X1))|~singletonP(X1)|~ssList(X1))).
#
#cnf(i_0_30, plain, (cyclefreeP(X1)|ssItem(esk10_1(X1))|~ssList(X1))).
#
#cnf(i_0_29, plain, (cyclefreeP(X1)|ssItem(esk11_1(X1))|~ssList(X1))).
#
#cnf(i_0_82, plain, (X1!=X2|~ssList(X2)|~ssList(X1)|~neq(X1,X2))).
#
#cnf(i_0_28, plain, (cyclefreeP(X1)|ssList(esk12_1(X1))|~ssList(X1))).
#
#cnf(i_0_27, plain, (cyclefreeP(X1)|ssList(esk13_1(X1))|~ssList(X1))).
#
#cnf(i_0_26, plain, (cyclefreeP(X1)|ssList(esk14_1(X1))|~ssList(X1))).
#
#cnf(i_0_104, plain, (~lt(X2,X1)|~lt(X1,X2)|~ssItem(X2)|~ssItem(X1))).
#
#cnf(i_0_39, plain, (totalorderP(X1)|ssItem(esk15_1(X1))|~ssList(X1))).
#
#cnf(i_0_38, plain, (totalorderP(X1)|ssItem(esk16_1(X1))|~ssList(X1))).
#
#cnf(i_0_37, plain, (totalorderP(X1)|ssList(esk17_1(X1))|~ssList(X1))).
#
#cnf(i_0_189, plain, (~gt(X2,X1)|~gt(X1,X2)|~ssItem(X2)|~ssItem(X1))).
#
#cnf(i_0_36, plain, (totalorderP(X1)|ssList(esk18_1(X1))|~ssList(X1))).
#
#cnf(i_0_35, plain, (totalorderP(X1)|ssList(esk19_1(X1))|~ssList(X1))).
#
#cnf(i_0_48, plain, (strictorderP(X1)|ssItem(esk20_1(X1))|~ssList(X1))).
#
#cnf(i_0_73, plain, (app(app(X4,cons(X2,X5)),cons(X3,X6))!=X1|X2!=X3|~duplicatefreeP(X1)|~ssList(X6)|~ssList(X5)|~ssList(X4)|~ssList(X1)|~ssItem(X3)|~ssItem(X2))).
#
#cnf(i_0_47, plain, (strictorderP(X1)|ssItem(esk21_1(X1))|~ssList(X1))).
#
#cnf(i_0_46, plain, (strictorderP(X1)|ssList(esk22_1(X1))|~ssList(X1))).
#
#cnf(i_0_45, plain, (strictorderP(X1)|ssList(esk23_1(X1))|~ssList(X1))).
#
#cnf(i_0_201, plain, (app(cons(X1,X2),cons(X3,X4))!=X5|X1!=X3|~duplicatefreeP(X5)|~ssList(cons(X1,X2))|~ssList(X4)|~ssList(X2)|~ssList(X5)|~ssItem(X3)|~ssItem(X1))).
#
#cnf(i_0_44, plain, (strictorderP(X1)|ssList(esk24_1(X1))|~ssList(X1))).
#
#cnf(i_0_56, plain, (totalorderedP(X1)|ssItem(esk25_1(X1))|~ssList(X1))).
#
#cnf(i_0_55, plain, (totalorderedP(X1)|ssItem(esk26_1(X1))|~ssList(X1))).
#
#cnf(i_0_31, plain, (app(app(X4,cons(X2,X5)),cons(X3,X6))!=X1|~leq(X3,X2)|~leq(X2,X3)|~cyclefreeP(X1)|~ssList(X6)|~ssList(X5)|~ssList(X4)|~ssList(X1)|~ssItem(X3)|~ssItem(X2))).
#
#cnf(i_0_54, plain, (totalorderedP(X1)|ssList(esk27_1(X1))|~ssList(X1))).
#
#cnf(i_0_53, plain, (totalorderedP(X1)|ssList(esk28_1(X1))|~ssList(X1))).
#
#cnf(i_0_52, plain, (totalorderedP(X1)|ssList(esk29_1(X1))|~ssList(X1))).
#
#cnf(i_0_206, plain, (app(cons(X1,X2),cons(X3,X4))!=X5|~leq(X3,X1)|~leq(X1,X3)|~cyclefreeP(X5)|~ssList(cons(X1,X2))|~ssList(X4)|~ssList(X2)|~ssList(X5)|~ssItem(X3)|~ssItem(X1))).
#
#cnf(i_0_64, plain, (strictorderedP(X1)|ssItem(esk30_1(X1))|~ssList(X1))).
#
#cnf(i_0_63, plain, (strictorderedP(X1)|ssItem(esk31_1(X1))|~ssList(X1))).
#
#cnf(i_0_62, plain, (strictorderedP(X1)|ssList(esk32_1(X1))|~ssList(X1))).
#
#cnf(i_0_202, plain, (X1!=X2|~duplicatefreeP(app(cons(X1,X3),cons(X2,X4)))|~ssList(app(cons(X1,X3),cons(X2,X4)))|~ssList(cons(X1,X3))|~ssList(X4)|~ssList(X3)|~ssItem(X2)|~ssItem(X1))).
#
#cnf(i_0_61, plain, (strictorderedP(X1)|ssList(esk33_1(X1))|~ssList(X1))).
#
#cnf(i_0_60, plain, (strictorderedP(X1)|ssList(esk34_1(X1))|~ssList(X1))).
#
#cnf(i_0_72, plain, (duplicatefreeP(X1)|ssItem(esk35_1(X1))|~ssList(X1))).
#
#cnf(i_0_199, plain, (X1!=X2|~duplicatefreeP(app(app(X3,cons(X1,X4)),cons(X2,X5)))|~ssList(app(app(X3,cons(X1,X4)),cons(X2,X5)))|~ssList(X5)|~ssList(X4)|~ssList(X3)|~ssItem(X2)|~ssItem(X1))).
#
#cnf(i_0_71, plain, (duplicatefreeP(X1)|ssItem(esk36_1(X1))|~ssList(X1))).
#
#cnf(i_0_70, plain, (duplicatefreeP(X1)|ssList(esk37_1(X1))|~ssList(X1))).
#
#cnf(i_0_69, plain, (duplicatefreeP(X1)|ssList(esk38_1(X1))|~ssList(X1))).
#
#cnf(i_0_203, plain, (app(cons(X1,X2),cons(X3,X4))!=cons(X5,nil)|X1!=X3|~ssList(cons(X5,nil))|~ssList(cons(X1,X2))|~ssList(X4)|~ssList(X2)|~ssItem(X3)|~ssItem(X1)|~ssItem(X5))).
#
#cnf(i_0_68, plain, (duplicatefreeP(X1)|ssList(esk39_1(X1))|~ssList(X1))).
#
#cnf(i_0_79, plain, (equalelemsP(X1)|ssItem(esk40_1(X1))|~ssList(X1))).
#
#cnf(i_0_78, plain, (equalelemsP(X1)|ssItem(esk41_1(X1))|~ssList(X1))).
#
#cnf(i_0_200, plain, (app(app(X1,cons(X2,X3)),cons(X4,X5))!=cons(X6,nil)|X2!=X4|~ssList(cons(X6,nil))|~ssList(X5)|~ssList(X3)|~ssList(X1)|~ssItem(X4)|~ssItem(X2)|~ssItem(X6))).
#
#cnf(i_0_77, plain, (equalelemsP(X1)|ssList(esk42_1(X1))|~ssList(X1))).
#
#cnf(i_0_76, plain, (equalelemsP(X1)|ssList(esk43_1(X1))|~ssList(X1))).
#
#cnf(i_0_83, plain, (ssList(cons(X2,X1))|~ssList(X1)|~ssItem(X2))).
#
#cnf(i_0_212, plain, (app(cons(X1,X2),cons(X3,X4))!=cons(X5,nil)|X1!=X3|~ssList(cons(X1,X2))|~ssList(X4)|~ssList(X2)|~ssItem(X3)|~ssItem(X1)|~ssItem(X5))).
#
#cnf(i_0_96, plain, (ssList(app(X1,X2))|~ssList(X2)|~ssList(X1))).
#
#cnf(i_0_74, plain, (equalelemsP(X1)|esk41_1(X1)!=esk40_1(X1)|~ssList(X1))).
#
#cnf(i_0_125, plain, (nil=X1|~frontsegP(nil,X1)|~ssList(X1))).
#
#cnf(i_0_211, plain, (app(app(X1,cons(X2,X3)),cons(X4,X5))!=cons(X6,nil)|X2!=X4|~ssList(X5)|~ssList(X3)|~ssList(X1)|~ssItem(X4)|~ssItem(X2)|~ssItem(X6))).
#
#cnf(i_0_132, plain, (nil=X1|~rearsegP(nil,X1)|~ssList(X1))).
#
#cnf(i_0_139, plain, (nil=X1|~segmentP(nil,X1)|~ssList(X1))).
#
#cnf(i_0_124, plain, (frontsegP(nil,X1)|nil!=X1|~ssList(X1))).
##
#cnf(i_0_131, plain, (rearsegP(nil,X1)|nil!=X1|~ssList(X1))).
#
#cnf(i_0_138, plain, (segmentP(nil,X1)|nil!=X1|~ssList(X1))).
#
#cnf(i_0_92, plain, (nil=X1|ssItem(hd(X1))|~ssList(X1))).
#
#cnf(i_0_209, plain, (X1!=X2|~duplicatefreeP(app(cons(X1,X3),cons(X2,X4)))|~ssList(app(app(nil,cons(X1,X3)),cons(X2,X4)))|~ssList(cons(X1,X3))|~ssList(X4)|~ssList(X3)|~ssItem(X2)|~ssItem(X1))).
#
#cnf(i_0_89, plain, (nil=X1|ssItem(esk45_1(X1))|~ssList(X1))).
#
#cnf(i_0_165, plain, (nil=X1|ssItem(esk46_1(X1))|~ssList(X1))).
#
#cnf(i_0_94, plain, (nil=X1|ssList(tl(X1))|~ssList(X1))).
##
#cnf(i_0_90, plain, (nil=X1|ssList(esk44_1(X1))|~ssList(X1))).
#
#cnf(i_0_167, plain, (nil=X1|ssList(esk47_1(X1))|~ssList(X1))).
#
#cnf(i_0_66, plain, (esk35_1(X1)=esk36_1(X1)|duplicatefreeP(X1)|~ssList(X1))).
#
#cnf(i_0_220, plain, (X1!=X2|~duplicatefreeP(app(cons(X1,X3),cons(X2,X4)))|~ssList(app(nil,cons(X1,X3)))|~ssList(cons(X1,X3))|~ssList(cons(X2,X4))|~ssList(X4)|~ssList(X3)|~ssItem(X2)|~ssItem(X1))).
##
#cnf(i_0_1, plain, (X1=X2|neq(X1,X2)|~ssItem(X2)|~ssItem(X1))).
#
#cnf(i_0_222, negated_conjecture, (nil=esk51_0|~ssItem(nil)|~ssItem(esk51_0))).
#
#cnf(i_0_207, plain, (~leq(X1,X2)|~leq(X2,X1)|~cyclefreeP(app(cons(X2,X3),cons(X1,X4)))|~ssList(app(cons(X2,X3),cons(X1,X4)))|~ssList(cons(X2,X3))|~ssList(X4)|~ssList(X3)|~ssItem(X1)|~ssItem(X2))).
#
#cnf(i_0_81, plain, (X1=X2|neq(X1,X2)|~ssList(X2)|~ssList(X1))).
#
#cnf(i_0_225, negated_conjecture, (nil=esk51_0)).

# Proof found!
# SZS status Theorem
# SZS output start CNFRefutation
fof(co1, conjecture, ![X1]:(ssList(X1)=>![X2]:(ssList(X2)=>![X3]:(ssList(X3)=>![X4]:(ssList(X4)=>(X2!=X4|X1!=X3|neq(X4,nil)|cyclefreeP(X2)))))), file('./p/SWC132+1.tptp', co1)).
fof(ax15, axiom, ![X1]:(ssList(X1)=>![X2]:(ssList(X2)=>(neq(X1,X2)<=>X1!=X2))), file('./p/SWC132+1.tptp', ax15)).
fof(ax17, axiom, ssList(nil), file('./p/SWC132+1.tptp', ax17)).
fof(ax60, axiom, cyclefreeP(nil), file('./p/SWC132+1.tptp', ax60)).
fof(c_0_4, negated_conjecture, ~(![X1]:(ssList(X1)=>![X2]:(ssList(X2)=>![X3]:(ssList(X3)=>![X4]:(ssList(X4)=>(X2!=X4|X1!=X3|neq(X4,nil)|cyclefreeP(X2))))))), inference(assume_negation,[status(cth)],[co1])).
fof(c_0_5, negated_conjecture, (ssList(esk48_0)&(ssList(esk49_0)&(ssList(esk50_0)&(ssList(esk51_0)&(((esk49_0=esk51_0&esk48_0=esk50_0)&~neq(esk51_0,nil))&~cyclefreeP(esk49_0)))))), inference(skolemize,[status(esa)],[inference(variable_rename,[status(thm)],[inference(fof_nnf,[status(thm)],[c_0_4])])])).
fof(c_0_6, plain, ![X109, X110]:((~neq(X109,X110)|X109!=X110|~ssList(X110)|~ssList(X109))&(X109=X110|neq(X109,X110)|~ssList(X110)|~ssList(X109))), inference(distribute,[status(thm)],[inference(shift_quantors,[status(thm)],[inference(variable_rename,[status(thm)],[inference(fof_nnf,[status(thm)],[ax15])])])])).
cnf(c_0_7, negated_conjecture, (~neq(esk51_0,nil)), inference(split_conjunct,[status(thm)],[c_0_5])).
cnf(c_0_8, plain, (X1=X2|neq(X1,X2)|~ssList(X2)|~ssList(X1)), inference(split_conjunct,[status(thm)],[c_0_6])).
cnf(c_0_9, plain, (ssList(nil)), inference(split_conjunct,[status(thm)],[ax17])).
cnf(c_0_10, negated_conjecture, (ssList(esk51_0)), inference(split_conjunct,[status(thm)],[c_0_5])).
cnf(c_0_11, negated_conjecture, (~cyclefreeP(esk49_0)), inference(split_conjunct,[status(thm)],[c_0_5])).
cnf(c_0_12, negated_conjecture, (esk49_0=esk51_0), inference(split_conjunct,[status(thm)],[c_0_5])).
cnf(c_0_13, plain, (cyclefreeP(nil)), inference(split_conjunct,[status(thm)],[ax60])).
cnf(c_0_14, negated_conjecture, (nil=esk51_0), inference(cn,[status(thm)],[inference(rw,[status(thm)],[inference(rw,[status(thm)],[inference(pm,[status(thm)],[c_0_7, c_0_8]), c_0_9]), c_0_10])])).
cnf(c_0_15, negated_conjecture, (~cyclefreeP(esk51_0)), inference(rw,[status(thm)],[c_0_11, c_0_12])).
cnf(c_0_16, plain, ($false), inference(sr,[status(thm)],[inference(rw,[status(thm)],[c_0_13, c_0_14]), c_0_15]), ['proof']).
# SZS output end CNFRefutation
# Proof object total steps             : 17
# Proof object clause steps            : 10
# Proof object formula steps           : 7
# Proof object conjectures             : 9
# Proof object clause conjectures      : 6
# Proof object formula conjectures     : 3
# Proof object initial clauses used    : 7
# Proof object initial formulas used   : 4
# Proof object generating inferences   : 1
# Proof object simplifying inferences  : 6
# Training examples: 0 positive, 0 negative
# Parsed axioms                        : 96
# Removed by relevancy pruning/SinE    : 0
# Initial clauses                      : 198
# Removed in clause preprocessing      : 2
# Initial clauses in saturation        : 196
# Processed clauses                    : 118
# ...of these trivial                  : 0
# ...subsumed                          : 3
# ...remaining for further processing  : 115
# Other redundant clauses eliminated   : 0
# Clauses deleted for lack of memory   : 0
# Backward-subsumed                    : 2
# Backward-rewritten                   : 44
# Generated clauses                    : 29
# ...of the previous two non-trivial   : 59
# Contextual simplify-reflections      : 0
# Paramodulations                      : 25
# Factorizations                       : 0
# Equation resolutions                 : 4
# Propositional unsat checks           : 0
#    Propositional check models        : 0
#    Propositional check unsatisfiable : 0
#    Propositional clauses             : 0
#    Propositional clauses after purity: 0
#    Propositional unsat core size     : 0
#    Propositional preprocessing time  : 0.000
#    Propositional encoding time       : 0.000
#    Propositional solver time         : 0.000
#    Success case prop preproc time    : 0.000
#    Success case prop encoding time   : 0.000
#    Success case prop solver time     : 0.000
# Current number of processed clauses  : 69
#    Positive orientable unit clauses  : 7
#    Positive unorientable unit clauses: 0
#    Negative unit clauses             : 2
#    Non-unit-clauses                  : 60
# Current number of unprocessed clauses: 98
# ...number of literals in the above   : 478
# Current number of archived formulas  : 0
# Current number of archived clauses   : 46
# Clause-clause subsumption calls (NU) : 577
# Rec. Clause-clause subsumption calls : 427
# Non-unit clause-clause subsumptions  : 5
# Unit Clause-clause subsumption calls : 9
# Rewrite failures with RHS unbound    : 0
# BW rewrite match attempts            : 3
# BW rewrite match successes           : 3
# Condensation attempts                : 0
# Condensation successes               : 0
# Termbank termtop insertions          : 16015
